// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ndso_bowling.Database;

namespace ndso_bowling.Migrations
{
    [DbContext(typeof(DatabaseConnection))]
    [Migration("20200828025701_Initial1")]
    partial class Initial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ndso_bowling.Database.Athlete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CoachId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.ToTable("Athletes");
                });

            modelBuilder.Entity("ndso_bowling.Database.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("ndso_bowling.Database.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AthleteId")
                        .HasColumnType("int");

                    b.Property<int?>("CoachId")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<byte[]>("ScoreImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Witness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WitnessPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AthleteId");

                    b.HasIndex("CoachId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("ndso_bowling.Database.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AthleteId")
                        .HasColumnType("int");

                    b.Property<int?>("CoachId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AthleteId");

                    b.HasIndex("CoachId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ndso_bowling.Database.Athlete", b =>
                {
                    b.HasOne("ndso_bowling.Database.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId");
                });

            modelBuilder.Entity("ndso_bowling.Database.Game", b =>
                {
                    b.HasOne("ndso_bowling.Database.Athlete", "Athlete")
                        .WithMany()
                        .HasForeignKey("AthleteId");

                    b.HasOne("ndso_bowling.Database.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId");
                });

            modelBuilder.Entity("ndso_bowling.Database.User", b =>
                {
                    b.HasOne("ndso_bowling.Database.Athlete", "Athlete")
                        .WithMany()
                        .HasForeignKey("AthleteId");

                    b.HasOne("ndso_bowling.Database.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId");
                });
#pragma warning restore 612, 618
        }
    }
}
